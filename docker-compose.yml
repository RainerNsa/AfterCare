version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: aftercare-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: aftercare_db
    volumes:
      - mongodb_data:/data/db
      - ./server/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - aftercare-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: aftercare-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aftercare-network

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: aftercare-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/aftercare_db?authSource=admin
      - REDIS_URL=redis://redis:6379
      - DATABASE_NAME=aftercare_db
      - FRONTEND_URL=http://localhost:5174
    depends_on:
      - mongodb
      - redis
    networks:
      - aftercare-network
    volumes:
      - ./server:/app
      - /app/node_modules

  # Frontend Development Server (optional)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: aftercare-frontend
    restart: unless-stopped
    ports:
      - "5174:5174"
    environment:
      - VITE_API_URL=http://localhost:3000
    depends_on:
      - backend
    networks:
      - aftercare-network
    volumes:
      - ./client:/app
      - /app/node_modules

volumes:
  mongodb_data:
  redis_data:

networks:
  aftercare-network:
    driver: bridge 